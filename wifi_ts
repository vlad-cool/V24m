1. scan_wifi_networks(): This function allows users to scan for available WiFi networks in their vicinity. It should return a list of WiFi network names (SSIDs) along with their signal strengths, encryption types, and other relevant information.
2. connect_to_wifi(ssid, password): This function enables users to connect to a specific WiFi network by providing the network's SSID and password as parameters. It should handle the authentication process and establish a connection to the network.
3. disconnect_from_wifi(): This function allows users to disconnect from the currently connected WiFi network. It terminates the connection and frees up the network resources.
4. get_connected_wifi_network(): This function retrieves information about the currently connected WiFi network, such as the SSID, signal strength, IP address, and other relevant details.
5. get_wifi_network_details(ssid): This function provides detailed information about a specific WiFi network. Users can input the SSID of the network they are interested in, and the function will return information such as the signal strength, encryption type, supported authentication methods, and more.
6. get_available_wifi_interfaces(): This function retrieves a list of available WiFi interfaces on the user's device. It can be useful when working with multiple WiFi modules or for cases where users need to switch between different wireless adapters.
7. create_wifi_network(ssid, password): This function allows users to create a WiFi network on their device. It should take parameters like SSID and password and configure the local wireless interface accordingly.
8. delete_wifi_network(ssid): This function enables users to delete a previously created WiFi network. It should remove the corresponding configuration and settings associated with the provided SSID.
9. check_internet_connectivity(): This function tests the internet connectivity by pinging a known server, such as Google's DNS (8.8.8.8). It can be used to verify if the device has an active internet connection.
